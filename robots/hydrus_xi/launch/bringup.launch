<?xml version="1.0"?>
<launch>
  ###########  launch config  ###########
  <arg name="real_machine" default="True" />
  <arg name="simulation" default="False" />
  <arg name="control_mode" default="0" />
  <arg name="type" default="quad" />
  <arg name="onboards_model" default="xavier201811" />
  <arg name="estimate_mode"  default= "0" />
  <arg name="fullyactuated_control" default="True"/>
  <arg name="headless" default="True" />
  <arg name="worldtype" default="$(find aerial_robot_simulation)/gazebo_model/world/empty.world" />
  <arg name="direct_model" default="False" />
  <arg name="direct_model_name" />
  <arg name="launch_gazebo" default="True" />
  <arg name="spawn_x" default="0.0"/>
  <arg name="spawn_y" default="0.0"/>
  <arg name="spawn_z" default="0.0"/>
  <arg name="spawn_yaw" default="0.0"/>

  ###########  UAV Config  ###########
  <param if="$(arg fullyactuated_control)" name="/uav_info/uav_model" value= "17" />
  <param unless="$(arg fullyactuated_control)" name="/uav_info/uav_model" value= "16" />
  <param name="/hydrus_xi/baselink" value="fc" />

  ###########  Motor Config  ###########
  <rosparam file="$(find hydrus_xi)/config/motor_info/MN4010KV475_Afro_15inch.yaml" command="load" />

  ###########  Battery Config  ###########
  <rosparam file="$(find hydrus_xi)/config/$(arg type)/Battery.yaml" command="load" />

  ########### Servo Config ###########
  <rosparam file="$(find hydrus_xi)/config/$(arg type)/Servo.yaml" command="load" ns="hydrus_xi"/>

  ###########  Base Platform  ###########
  <node pkg="aerial_robot_base" type="aerial_robot_base_node" name="aerial_robot_base_node" output="screen" >

    ###########  Basic Param  ###########
    # EGOMOTION_ESTIMATE = 0
    # EXPERIMENT_ESTIMATE = 1. for unstable mocap, use this mode
    # GROUND_TRUTH = 2
    <param name="estimator/estimate_mode" value= "$(arg estimate_mode)" if="$(arg real_machine)"/>
    <param name="estimator/estimate_mode" value= "2" if="$(arg simulation)" />

    # World Pos Control Mode: 0
    # World Vel Control Mode: 2
    # Local Vel Control Mode: 3
    # Attitude Control Mode: 4
    <param name="navigator/xy_control_mode"  value="$(arg control_mode)"/>

    <param name="simulation" value="$(arg simulation)" /> <!-- for sensor plugin -->
    <param name="param_verbose" value= "true" />
    <param name="main_rate" type="double" value="40"/>

    ###########  Sensor Fusion  ###########
    <rosparam file="$(find hydrus_xi)/config/$(arg type)/egomotion_estimation/$(arg onboards_model).yaml" command="load" if="$(arg real_machine)"/>
    <rosparam file="$(find hydrus_xi)/config/$(arg type)/egomotion_estimation/simulation.yaml" command="load" if="$(eval arg('simulation') * (1 - arg('real_machine')))"/>

    ###########  Flight Control  ###########
    <param if="$(arg fullyactuated_control)" name="control_plugin_name" value ="control_plugin/hydrus_xi_fully_actuated_controller"/>
    <rosparam if="$(arg fullyactuated_control)" file="$(find hydrus_xi)/config/$(arg type)/FullyActuatedPidControlConfig.yaml" command="load" />
    <remap if="$(arg fullyactuated_control)" from="joint_states" to="hydrus_xi/joint_states"/>
    <rosparam unless="$(arg fullyactuated_control)" file="$(find hydrus_xi)/config/$(arg type)/DifferentialFlatnessPidControlConfig.yaml" command="load" />

    ###########  Teleop  ###########
    <rosparam file="$(find hydrus_xi)/config/$(arg type)/TeleopNavigationConfig.yaml" command="load" />
  </node>

  ###########  Sensors  ###########
  <include file="$(find hydrus_xi)/launch/includes/$(arg onboards_model)/sensors.launch.xml" >
    <arg name="real_machine" value="$(arg real_machine)" />
    <arg name="simulation" value="$(arg simulation)" />
  </include >

  ###########  Servo Bridge  ###########
  <node pkg="aerial_robot_model" type="servo_bridge_node" name="servo_bridge" output="screen" ns="hydrus_xi"/>

  ###########  Robot Model  ###########
  <include file="$(find hydrus_xi)/launch/robot_model.launch" >
    <arg name="type" value="$(arg type)" />
    <arg name="model" value="$(arg onboards_model)"/>
    <arg name="headless" value="$(arg headless)" />
    <arg name="need_joint_state" value="false" if ="$(eval arg('simulation') + arg('real_machine') > 0)"/>
    <arg name="description_mode" value="gazebo" if="$(arg simulation)"/>
    <arg name="direct_model" value="$(arg direct_model)" />
    <arg name="direct_model_name" value="$(arg direct_model_name)" if="$(arg direct_model)"/>
  </include >

  ###########  LQI Control  ###########
  <node unless="$(arg fullyactuated_control)" pkg="hydrus_xi" type="hydrus_xi_lqi_controller_node" name="hydrus_xi" output="screen" respawn="true">
    <rosparam file="$(find hydrus_xi)/config/$(arg type)/LQIControl.yaml" command="load" />
    <remap from="joint_states" to="hydrus_xi/joint_states"/>
    <param name="kinematic_verbose" value="false" />
    <param name="control_verbose" value="false" />
    <param name="debug_verbose" value="false" />
  </node>

  ########## Simulation in Gazebo #########
  <include file="$(find aerial_robot_simulation)/launch/simulation.launch" if = "$(eval arg('simulation') * (1 - arg('real_machine')))" >
    <arg name="model" value="hydrus_xi"/>
    <arg name="launch_gazebo" default="$(arg launch_gazebo)" />
    <arg name="gui" value="false" if="$(arg headless)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="worldtype" value="$(arg worldtype)"/>
    <arg name="spawn_x" value="$(arg spawn_x)"/>
    <arg name="spawn_y" value="$(arg spawn_y)"/>
    <arg name="spawn_z" value="$(arg spawn_z)"/>
    <arg name="spawn_yaw" value="$(arg spawn_yaw)"/>
  </include>

  ######### init gimbal angles #########
  <node pkg="hydrus_xi" name="init_gimbal_angles" type="init_gimbal_angles.py"/>
</launch>

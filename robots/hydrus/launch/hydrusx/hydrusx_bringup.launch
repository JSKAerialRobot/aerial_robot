<?xml version="1.0"?>
<launch>
  ###########  launch config  ###########
  <arg name="real_machine" default="True" />
  <arg name="simulation" default="False" />
  <arg name="control_mode" default="0" />
  <arg name="type" default="hex" />
  <arg name="estimate_mode"  default= "0" />
  <arg name="headless" default="True" />
  <arg name="worldtype" default="$(find aerial_robot_simulation)/gazebo_model/world/basic.world" />
  <arg name="direct_model" default="False" />
  <arg name="direct_model_name" />

  <!-- sensors(fusion) special parameters -->
  <param name="/sensor_plugin/altitude/no_height_offset" value="true" />

  ###########  UAV Config  ###########
  # HYDRUS = 16 # 0x10, hydrus type with  4dof underactuated property
  <param name="/uav_info/uav_model" value= "16" />

  ###########  Motor Config  ###########
  <rosparam file="$(find hydrus)/config/hydrusx/MotorInfo.yaml" command="load" />

  ###########  Battery Config  ###########
  <rosparam file="$(find hydrus)/config/hydrusx/$(arg type)/Battery.yaml" command="load" />

  ###########  Base Platform  ###########
  <node pkg="aerial_robot_base" type="aerial_robot_base_node" name="aerial_robot_base_node" output="screen" >

    ###########  Basic Param  ###########
    # EGOMOTION_ESTIMATE = 0
    # EXPERIMENT_ESTIMATE = 1. for unstable mocap, use this mode
    # GROUND_TRUTH = 2
    <param name="estimator/estimate_mode" value= "$(arg estimate_mode)" if="$(arg real_machine)"/>
    <param name="estimator/estimate_mode" value= "2" if="$(arg simulation)" />

    # World Pos Control Mode: 0
    # World Vel Control Mode: 2
    # Local Vel Control Mode: 3
    # Attitude Control Mode: 4
    <param name="navigator/xy_control_mode"  value="$(arg control_mode)"/>

    <param name="simulation" value="$(arg simulation)" /> <!-- for sensor plugin -->
    <param name="param_verbose" value= "true" />
    <param name="main_rate" type="double" value="40"/>

    ###########  Sensor Fusion  ###########
    <rosparam file="$(find hydrus)/config/hydrusx/SensorFusion.yaml" command="load" if="$(arg real_machine)"/>
    <rosparam file="$(find hydrus)/config/hydrusx/SensorSimulation.yaml" command="load" if="$(arg simulation)"/>
    ###########  PID Control  ###########
    <rosparam file="$(find hydrus)/config/hydrusx/$(arg type)/DifferentialFlatnessPidControlConfig.yaml" command="load" />

    ###########  Teleop  ###########
    <rosparam file="$(find hydrus)/config/hydrusx/TeleopNavigationConfig.yaml" command="load" />
  </node>

  ###########  Sensors  ###########
  <include file="$(find aerial_robot_base)/launch/sensors/onboard_sensors.launch"  if="$(arg real_machine)" >
    <arg name="imu_board" value="1" />  <!-- 1: d imu board, 0: kduino board -->
    <arg name="use_alt" value="0" />
    <arg name="use_mocap" value="0" />
    <arg name="use_joy" value="0" />
    <arg name="use_opti" value="0" />
    <arg name="imu_port" value="/dev/flight_controller" />
    <arg name="alt_port" value="/dev/leddar_one" />
  </include >

  ###########  Servo Bridge  ###########
  <node pkg="hydrus" type="dynamixel_bridge_node" name="servo_bridge"  output="screen"  ns="hydrusx" if="$(arg real_machine)" >
    <rosparam file="$(find hydrus)/config/hydrusx/$(arg type)/Servo.yaml" command="load" />
  </node>

  ###########  Robot Model  ###########
  <include file="$(find hydrus)/launch/robot_model.launch" >
    <arg name="model" value="hydrusx"/>
    <arg name="type" value="$(arg type)" />
    <arg name="headless" value="$(arg headless)" />
    <arg name="need_joint_state" value="false" if="$(arg real_machine)"/>
    <arg name="need_joint_state" value="false" if="$(arg simulation)"/>
    <arg name="description_mode" value="gazebo" if="$(arg simulation)"/>
    <arg name="direct_model" value="$(arg direct_model)" />
    <arg name="direct_model_name" value="$(arg direct_model_name)" if="$(arg direct_model)"/>
  </include >

  ###########  Transform Control  ###########
  <node pkg="hydrus" type="transform_control_node" name="hydrusx"  output="screen" respawn="true">
    <rosparam file="$(find hydrus)/config/hydrusx/$(arg type)/Hydrus.yaml" command="load" />
    <param name="kinematic_verbose" value="false" />
    <param name="control_verbose" value="false" />
    <param name="debug_verbose" value="false" />
  </node>

  ########## Simulation in Gazebo #########
  <rosparam file="$(find hydrus)/config/hydrusx/$(arg type)/SimulationControl.yaml" command="load"/>
  <include file="$(find aerial_robot_simulation)/launch/simulation.launch" if = "$(arg simulation)" >
    <arg name="model" default="hydrusx" />
    <arg name="gui" default="false" if="$(arg headless)" />
    <arg name="headless" default="$(arg headless)" />
    <arg name="worldtype" value="$(arg worldtype)" />
    </include>
</launch>
